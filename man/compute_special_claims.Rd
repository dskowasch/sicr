% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/special_claims.R
\name{compute_special_claims}
\alias{compute_special_claims}
\title{Compute everything belonging to the chosen special claims}
\usage{
compute_special_claims(
  special_claims,
  extended_claims_data,
  first_orig_year,
  last_orig_year,
  end_of_tail,
  external_patterns = NULL,
  active_annuities = NULL,
  age_shift = NULL,
  mortality = NULL,
  reinsurance = NULL,
  indices = NULL
)
}
\arguments{
\item{special_claims}{Dataframe with special claims, see details.}

\item{extended_claims_data}{Prepared claims data dataframe, see details of \code{\link[=prepare_data]{prepare_data()}}. \cr It is not necessary to
reduce this dataframe to special claims, this will be done by the function.}

\item{first_orig_year}{Integer value for the first origin year, will be treated as the first observed calendar year.}

\item{last_orig_year}{Integer value for the last origin year which will also be treated as the last calendar year,
usually the calendar year that just ended.}

\item{end_of_tail}{Chosen development year of tail end.}

\item{external_patterns}{List of external patterns that can be referred to in \code{special_claims}, see details. Default: NULL\cr
Only necessary if special_claims$type is set to external.}

\item{active_annuities}{Dataframe of active annuities, see \link{active_annuities_xmpl}. Default: NULL.\cr
Only necessary if annuities shall be considered.}

\item{age_shift}{Dataframe, see description of \link{age_shift_xmpl}. Default: NULL \cr
Only necessary if annuities shall be considered.}

\item{mortality}{Dataframe, see description of \link{mortality_xmpl}. Default: NULL \cr
Only necessary if annuities shall be considered.}

\item{reinsurance}{Dataframe with reinsurance information, see details of \code{\link[=xl_cashflow]{xl_cashflow()}} or \link{reinsurance_xmpl}. Default: NULL\cr
Only necessary if reinsurance shall be considered.}

\item{indices}{Dataframe for indexation, see details of \code{\link[=prepare_data]{prepare_data()}}. Default: NULL\cr
Only necessary if reinsurance shall be considered.}
}
\value{
List of matrices. Each matrix consists of one row per year between \code{first_orig_year} and \code{last_orig_year} but the count of
columns varies (with n be the number of origin years): \cr
\enumerate{
\item \code{special_claims_payments} with historic and future claim payments (250 + n columns)
\item \code{special_claims_reserved} with historic claims reserves (n columns)
\item \code{special_annuities_payments} with historic and future annuity payments (250 + n columns)
\item \code{special_annuities_reserved} with historic annuities reserves (n columns)
\item \code{special_ceded_quota_payments} with historic and future payments from the quota share reinsurance contract (250 + n columns)
\item \code{special_ceded_xl_payments} with historic and future payments from the xl reinsurance contract (250 + n columns)
}
}
\description{
This function computes every needed information about the chosen special claims in one step.
}
\details{
Some claims differ to historic claims so much that they cannot be reserved with the available pools. This mostly
applies to very large claims that have not been observed yet hence there is no adequate historic data of similar
claims in the pools. These claims must be separated and projected deterministically. \cr \cr
This package comes with some graphic options to identify special claims. After this process, the dataframe
\code{special_claims} must be created with one row per special claim and the following columns:
\itemize{
\item \code{Claim_id} \cr type: character. Unique claim id.
\item \code{Reserve2BE_percentage} \cr type: numeric. This number will be multiplied with the latest claim reserve to calculate
the best estimate reserve, e.g. 0.8 if 80\% of the reserve will be needed for future payments.
\item \code{Rollout_type} \cr type: character. One of \code{linear}, \code{constant} or \code{external}.
\itemize{
\item \code{linear} means that the payments will decrease evenly and reach 0 at \code{end_of_tail}. The sum is the desired best estimate.
\item \code{constant} means equal payments until \code{end_of_tail} that add to the desired best estimate.
\item \code{external} means that the best estimate is rolled out by an external pattern. The patterns must be specified
in the list \code{external_patterns}. If \code{external} is chosen, the column \code{Pattern_id} is used.
}
\item \code{Pattern_id} type: integer. The number of the element of list \code{external_patterns} where the desired
external pattern is specified.
}

The list \code{external_patterns} specifies the external patterns that special_claims$Pattern_id refers to. Hence this list
must at least contain \code{max(special_claims$Pattern_id)} elements. \cr
Each element is a numeric vector with future payments as a percentage of the best estimate reserve. Sum of vector must be 1.
}
\examples{
# this example uses data provided with this package
extended_claims_data <- prepare_data(claims_data = minimal_claims_data_xmpl,
                                     indices = indices_xmpl,
                                     threshold = 400000,
                                     first_orig_year = 1989,
                                     last_orig_year = 2023,
                                     expected_year_of_growing_large = 3,
                                     reserve_classes = c(1, 200001, 400001, 700001, 1400001),
                                     pool_of_annuities = minimal_pool_of_annuities_xmpl)
# The claims with claim_ids Claim#43, Claim#44 and Claim#68 are identified as special claims.
special_claims <- data.frame(Claim_id = c("Claim#43", "Claim#44", "Claim#68"),
                             Reserve2BE_percentage = c(0.8, 0.5, 1.2),
                             Rollout_type = c("linear", "constant", "external"),
                             Pattern_id = c(1,1,3))
print(special_claims)

external_patterns <- list(c(0.5, 0.3, 0.2),
                          c(1),
                          c(0.7, 0.3))
print(external_patterns)

# First example ignores annuities and reinsurance.
result <- compute_special_claims(special_claims = special_claims,
                                 extended_claims_data = extended_claims_data,
                                 first_orig_year = 1989,
                                 last_orig_year = 2023,
                                 end_of_tail = 50,
                                 external_patterns = external_patterns)
print(str(result))
print(result$special_claims_payments[, c("2024", "2025", "2026", "2027", "2028", "2029")])

# Second example also computes annuities for claim#43
result <- compute_special_claims(special_claims = special_claims,
                                 extended_claims_data = extended_claims_data,
                                 first_orig_year = 1989,
                                 last_orig_year = 2023,
                                 end_of_tail = 50,
                                 external_patterns = external_patterns,
                                 active_annuities = minimal_active_annuities_xmpl,
                                 age_shift = age_shift_xmpl,
                                 mortality = mortality_xmpl)
print(result$special_annuities_payments[, c("2024", "2025", "2026", "2027", "2028", "2029")])

# Third example also computes reinsurance
# Priority in 2019 is set to 100.000 to produce a positive xl portion
reinsurance_xmpl[reinsurance_xmpl$Origin_year == 2019, "Priority"] <- 100000

result <- compute_special_claims(special_claims = special_claims,
                                 extended_claims_data = extended_claims_data,
                                 first_orig_year = 1989,
                                 last_orig_year = 2023,
                                 end_of_tail = 50,
                                 external_patterns = external_patterns,
                                 active_annuities = minimal_active_annuities_xmpl,
                                 age_shift = age_shift_xmpl,
                                 mortality = mortality_xmpl,
                                 reinsurance = reinsurance_xmpl,
                                 indices = indices_xmpl)
print(result$special_ceded_xl_payments[, c("2024", "2025", "2026", "2027", "2028", "2029")])
print(result$special_ceded_quota_payments[, c("2024", "2025", "2026", "2027", "2028", "2029")])
}
