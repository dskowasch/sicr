% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/small_claims.R
\name{compute_small_claims}
\alias{compute_small_claims}
\title{Calculate small claims results in one step}
\usage{
compute_small_claims(
  first_orig_year,
  last_orig_year,
  indices,
  all_claims_paid,
  all_claims_reserved,
  all_annuities_paid = NULL,
  all_annuities_reserved = NULL,
  large_claims_list,
  large_claims_results,
  special_claims,
  special_claims_results,
  volume_paid_method = NULL,
  volume_incurred_method = NULL,
  external_paid_pattern = NULL,
  external_incurred_pattern = NULL,
  int2ext_transition_paid = NULL,
  int2ext_transition_incurred = NULL,
  weight_paid = 1,
  weight_incurred = 1,
  active_annuities = NULL,
  mortality = NULL,
  age_shift = NULL,
  pool_of_annuities = NULL,
  reinsurance = NULL
)
}
\arguments{
\item{first_orig_year}{Desired first origin year.}

\item{last_orig_year}{Desired last origin year.}

\item{indices}{Dataframe for indexation, see details of \code{\link[=prepare_data]{prepare_data()}}.}

\item{all_claims_paid}{Numeric matrix with origin years as rows and same years as calendar years as columns.}

\item{all_claims_reserved}{Numeric matrix with origin years as rows and same years as calendar years as columns.}

\item{all_annuities_paid}{Default: NULL \cr
Numeric matrix with origin years as rows and same years as calendar years as columns. \cr
No information about small claims' annuities history will be returned if NULL.}

\item{all_annuities_reserved}{Default: NULL \cr
Numeric matrix with origin years as rows and same years as calendar years as columns. \cr
No information about small claims' annuities history will be returned if NULL.}

\item{large_claims_list}{Dataframe of large claims generated with \code{\link[=generate_claims_list]{generate_claims_list()}}.}

\item{large_claims_results}{List generated with \code{\link[=aggregate_large_claims_results]{aggregate_large_claims_results()}}.}

\item{special_claims}{Dataframe with special claims, see details of \code{\link[=compute_special_claims]{compute_special_claims()}}.}

\item{special_claims_results}{List generated with \code{\link[=compute_special_claims]{compute_special_claims()}}}

\item{volume_paid_method}{Default: NULL. Volume to use for paid method, see \code{\link[=cl_factor]{cl_factor()}}.}

\item{volume_incurred_method}{Default: NULL. Volume to use for incurred method, see \code{\link[=cl_factor]{cl_factor()}}.}

\item{external_paid_pattern}{Default: NULL. Development pattern to use for paid method, see \code{\link[=generate_pattern]{generate_pattern()}}.}

\item{external_incurred_pattern}{Default: NULL. Development pattern to use for incurred method, see \code{\link[=generate_pattern]{generate_pattern()}}.}

\item{int2ext_transition_paid}{Default: NULL. Transition development year to use for paid method, see \code{\link[=generate_pattern]{generate_pattern()}}.}

\item{int2ext_transition_incurred}{Default: NULL. Transition development year to use for incurred method, see \code{\link[=generate_pattern]{generate_pattern()}}.}

\item{weight_paid}{Default: 1. Weight of paid method in result selection, see \code{\link[=merge_results]{merge_results()}}.}

\item{weight_incurred}{Default: 1. Weight of incurred method in result selection, see \code{\link[=merge_results]{merge_results()}}.}

\item{active_annuities}{Default: NULL. Dataframe of active annuities, see \link{active_annuities_xmpl}.}

\item{mortality}{Default: NULL. Dataframe, see description of \link{mortality_xmpl}.}

\item{age_shift}{Default: NULL. Dataframe, see description of \link{age_shift_xmpl}.}

\item{pool_of_annuities}{Default: NULL. Dataframe, see description of \code{pool_of_annuities} in details of \code{\link[=prepare_data]{prepare_data()}}.}

\item{reinsurance}{Default: NULL Dataframe with reinsurance information, see details of \code{\link[=xl_cashflow]{xl_cashflow()}} or \link{reinsurance_xmpl}. \cr
Only necessary if reinsurance shall be considered.}
}
\value{
List with six results matrices for small claims. Each matrix consist of one row per
development year between \code{first_orig_year} and \code{last_orig_year}. Matrices with suffix \code{...payments} consist of
one column for each historic calendar year between \code{first_orig_year} and \code{last_orig_year} and 250 predicted
calendar years. Matrices with suffix \code{...reserved} only contain the historic part as no reserves are predicted. \cr
\enumerate{
\item \code{small_claims_payments} with historic and predicted claim payments (e.g. without annuities).
\item \code{small_claims_reserved} with historic claim reserves (without annuities).
\item \code{small_known_annuities_payments} with historic and predicted payments for known annuities. Historic payments
are set to 0 if \code{all_annuities_paid} is \code{NULL}.
\item \code{small_annuities_reserved} with historic annuities' reserves. All entries are 0 if \code{small_annuities_reserved} is \code{NULL}.
\item \code{small_future_annuities_payments} with predicted payments for future annuities, the historic part is all 0.
\item \code{small_ceded_quota_payments} with historic and predicted reinsurance payments for quota share treaties. \cr \cr
}

Note that there are no reserves for future annuities. reserved triangles for reinsurance are often not available,
so they are not included here.
}
\description{
This function calculates all small claims results in one step.
}
\examples{
# this example uses data provided with this package
extended_claims_data <- prepare_data(claims_data = claims_data_xmpl,
                                     indices = indices_xmpl,
                                     threshold = 400000,
                                     first_orig_year = 1989,
                                     last_orig_year = 2023,
                                     expected_year_of_growing_large = 3,
                                     reserve_classes = c(1, 200001, 400001, 700001, 1400001),
                                     pool_of_annuities = pool_of_annuities_xmpl)

pools <- generate_pools(extended_claims_data = extended_claims_data,
                        reserve_classes = c(1, 200001, 400001, 700001, 1400001),
                        years_for_pools = 2014:2023,
                        start_of_tail = 17,
                        end_of_tail = 50,
                        lower_outlier_limit = -Inf,
                        upper_outlier_limit = Inf,
                        pool_of_annuities = pool_of_annuities_xmpl)


# The claims with claim_ids Claim#1474, Claim#3164 and Claim#3200 are identified as special claims.
special_claims <- data.frame(Claim_id = c("Claim#1474", "Claim#3164", "Claim#3200"),
                             Reserve2BE_percentage = c(0.8, 0.5, 1.2),
                             Rollout_type = c("linear", "constant", "external"),
                             Pattern_id = c(1,1,3))

external_patterns <- list(c(0.5, 0.3, 0.2),
                          c(1),
                          c(0.7, 0.3))

special_claims_results <- compute_special_claims(special_claims = special_claims,
                                                 extended_claims_data = extended_claims_data,
                                                 first_orig_year = 1989,
                                                 last_orig_year = 2023,
                                                 end_of_tail = 50,
                                                 external_patterns = external_patterns,
                                                 active_annuities = active_annuities_xmpl,
                                                 age_shift = age_shift_xmpl,
                                                 mortality = mortality_xmpl,
                                                 reinsurance = reinsurance_xmpl,
                                                 indices = indices_xmpl)

# filter large claims
large_extended_claims_data <-
   extended_claims_data[!extended_claims_data$Claim_id \%in\% special_claims$Claim_id,]


large_claims_list <- generate_claims_list(extended_claims_data = large_extended_claims_data,
                                          first_orig_year = 1989,
                                          last_orig_year = 2023)

history <- generate_history_per_claim(data = large_extended_claims_data,
                                      column = "Cl_payment_cal",
                                      first_orig_year = 1989,
                                      last_orig_year = 2023)
# simulation result
sim_result <- sicr(n = 1,
                   large_claims_list = large_claims_list,
                   first_orig_year = 1989,
                   last_orig_year = 2023,
                   pools = pools,
                   indices = indices_xmpl,
                   history = history,
                   exposure = exposure_xmpl,
                   years_for_ibnr_pools = 2014:2023,
                   active_annuities = active_annuities_xmpl,
                   age_shift = age_shift_xmpl,
                   mortality = mortality_xmpl,
                   reinsurance = reinsurance_xmpl)

large_claims_results <- aggregate_large_claims_results(
                              sim_result = sim_result,
                              large_claims_list = large_claims_list,
                              large_extended_claims_data = large_extended_claims_data,
                              history = history,
                              reinsurance = reinsurance_xmpl,
                              indices = indices_xmpl,
                              first_orig_year = 1989,
                              last_orig_year = 2023)


small_claims_results <- compute_small_claims(
                              first_orig_year = 1989,
                              last_orig_year = 2023,
                              indices = indices_xmpl,
                              all_claims_paid = all_claims_paid_xmpl,
                              all_claims_reserved = all_claims_reserved_xmpl,
                              all_annuities_paid = all_annuities_paid_xmpl,
                              all_annuities_reserved = all_annuities_reserved_xmpl,
                              large_claims_list = large_claims_list,
                              large_claims_results = large_claims_results,
                              special_claims = special_claims,
                              special_claims_results = special_claims_results,
                              active_annuities = active_annuities_xmpl,
                              mortality = mortality_xmpl,
                              age_shift = age_shift_xmpl,
                              pool_of_annuities = pool_of_annuities_xmpl,
                              reinsurance = reinsurance_xmpl)
print(small_claims_results)
}
