% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annuity_functions.R
\name{generate_annuity_payments}
\alias{generate_annuity_payments}
\title{Create matrix of agreed future payments (without mortality probabilities)}
\usage{
generate_annuity_payments(
  annuities,
  last_orig_year,
  indices = NULL,
  future_annuities = FALSE
)
}
\arguments{
\item{annuities}{dataframe, see description of \code{pool_of_annuities} in details of \code{\link[=prepare_data]{prepare_data()}}.}

\item{last_orig_year}{Integer value for the last origin year which will also be treated as the last calendar year,
usually the calendar year just ended.}

\item{indices}{dataframe for indexation, see details of \code{\link[=prepare_data]{prepare_data()}}.
Only needed if at least one annuity's calendar_year is not equal to last_orig_year, in particular not needed for
rolling out active annuities. Default: Null}

\item{future_annuities}{TRUE if this function is used to calculate future annuities, FALSE for known annuities.
Default: FALSE}
}
\value{
dataframe with one row per row in 'annuities' and 130 columns for future possible payments
}
\description{
Creates a matrix with one row per annuitiy and agreed future payments in columns. Mortality probabilities
are not taken into account here.
}
\details{
In order to reduce computing time when rolling out annuities, they are split into two matrices, one with agreed
future payments and one with the corresponding survival probabilities. This is the function for the first. \cr \cr
The function uses the entries of the columns \code{Annual_payment}, \code{Dynamic}, \code{Annuity_start} and \code{Annuity_end} to
create the deterministic agreed future payments. If \code{Calendar_year} is not equal to \code{last_orig_year}, the
payments are indexed to \code{last_orig_year} which is important when using annuity pools to predict future annuities.
In this case the dataframe \code{indices} is needed.
}
\examples{
# this example uses data provided with this package
# Example without indexation
print(minimal_active_annuities_xmpl)

# show only the first 10 columns
generate_annuity_payments(annuities = minimal_active_annuities_xmpl,
                          last_orig_year = 2023)[,1:10]

# Example with indexation
print(minimal_pool_of_annuities_xmpl)

# show only the first 10 columns
generate_annuity_payments(annuities = minimal_pool_of_annuities_xmpl,
                          last_orig_year = 2023,
                          indices = indices_xmpl,
                          future_annuities = TRUE)[,1:10]
}
