% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_functions.R
\name{expand_historic_indices}
\alias{expand_historic_indices}
\title{expand dataframe historic_indices by expected future indices}
\usage{
expand_historic_indices(
  historic_indices,
  first_orig_year,
  last_orig_year,
  index_gross_future = 0,
  index_re_future = 0
)
}
\arguments{
\item{historic_indices}{dataframe, see details}

\item{first_orig_year}{First origin year with full history.}

\item{last_orig_year}{Last origin year.}

\item{index_gross_future}{expected future index for gross claims, default: 0}

\item{index_re_future}{expected future index for index clause, see details}
}
\value{
extended dataframe
}
\description{
expand dataframe historic_indices by expected future indices
}
\details{
\strong{historic_indices} must be a dataframe with columns \code{Calendar_year} and
\code{Index_gross} and (optional) \code{Index_re}. \cr
\strong{historic_indices} must contain one row for each historic \code{Calendar_year} that shall be used
\itemize{
\item \code{Index_gross} is the claim payment development from one year to another, e.g. 0.02 for 2\% increase
\item \code{Index_re} is the contractually fixed claim payment development that is to be used in special index
clauses that are a common part of longtail xl resinsurance programs.
If this column is missing, it will be set to 0. \cr \cr
}

The function extends the dataframe historic_indices by the column
index_re_future if missing and by 250 future calendar_years.
}
\examples{
# for a constant inflation of 2\%
historic_indices <- data.frame(Calendar_year = 2015:2023,
                               Index_gross = 0.03)
print(historic_indices)
expand_historic_indices(historic_indices = historic_indices,
                        first_orig_year = 2015,
                        last_orig_year = 2023,
                        index_gross_future = 0.03)
}
